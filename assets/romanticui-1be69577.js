import{u as i,c as u,w as r,_ as s,o,a as l,d as n}from"./app-118909e9.js";const d=l("div",{class:"prose m-auto"},[l("p",null,[l("div",{class:"table-of-contents"},[l("ul",null,[l("li",null,[l("a",{href:"#一、项目介绍"},"一、项目介绍 ")]),l("li",null,[l("a",{href:"#二、项目实现"},"二、项目实现 "),l("ul",null,[l("li",null,[l("ul",null,[l("li",null,[l("a",{href:"#_3-1-技术选型与相关开发文档"},"3.1 技术选型与相关开发文档 ")]),l("li",null,[l("a",{href:"#_3-2-架构设计"},"3.2 架构设计 ")]),l("li",null,[l("a",{href:"#_3-3-项目代码介绍"},"3.3 项目代码介绍 ")])])])])]),l("li",null,[l("a",{href:"#三、测试结果"},"三、测试结果 "),l("ul",null,[l("li",null,[l("ul",null,[l("li",null,[l("a",{href:"#_4-1-功能性测试"},"4.1 功能性测试 ")])])])])]),l("li",null,[l("a",{href:"#四、demo-演示视频"},"四、Demo 演示视频 ")]),l("li",null,[l("a",{href:"#五、项目总结与反思"},"五、项目总结与反思 "),l("ul",null,[l("li",null,[l("ul",null,[l("li",null,[l("a",{href:"#目前仍存在的问题"},"目前仍存在的问题 ")]),l("li",null,[l("a",{href:"#已识别出的优化项"},"已识别出的优化项 ")]),l("li",null,[l("a",{href:"#架构演进的可能性"},"架构演进的可能性 ")]),l("li",null,[l("a",{href:"#项目过程中的反思与总结"},"项目过程中的反思与总结 ")])])])])])])])]),l("h1",{id:"一、项目介绍",tabindex:"-1"},[n("一、项目介绍 "),l("a",{class:"header-anchor",href:"#一、项目介绍","aria-hidden":"true"},"#")]),l("blockquote",null,[l("p",null,"一个基于 React 的组件库"),l("p",null,[n("Github 地址："),l("a",{href:"https://github.com/RomanticUI/RomanticUI",target:"_blank",rel:"noopener"},"https://github.com/RomanticUI/RomanticUI")])]),l("h1",{id:"二、项目实现",tabindex:"-1"},[n("二、项目实现 "),l("a",{class:"header-anchor",href:"#二、项目实现","aria-hidden":"true"},"#")]),l("h3",{id:"_3-1-技术选型与相关开发文档",tabindex:"-1"},[n("3.1 技术选型与相关开发文档 "),l("a",{class:"header-anchor",href:"#_3-1-技术选型与相关开发文档","aria-hidden":"true"},"#")]),l("p",null,[l("strong",null,"核心技术栈：")]),l("ul",null,[l("li",null,"Js:Ts、ES6")]),l("p",null,"Ts居有更好的类型检查、更好的可读性和可维护性、更好的代码组织和模块化等优点，这些特点使得Ts在开发大型复杂应用程序时更适合，并可以提高开发效率和代码质量"),l("ul",null,[l("li",null,"样式：Less")]),l("p",null,"完全支持样式覆盖，可读性较强，上手程度较低，适合不同技术栈的同学迅速实现简单的使用"),l("ul",null,[l("li",null,"测试工具：Jest、@testing-library/react")]),l("p",null,"Jest既简单又强大，可以设置测试的事前步骤和事后步骤，模拟函数等功能；Jest的快照功能用于组件的测试十分强大。"),l("ul",null,[l("li",null,[n("规范 "),l("ul",null,[l("li",null,[l("p",null,"代码风格：eslint+prettier、stylelint、commitlint"),l("ul",null,[l("li",null,"通过规范工具对代码进行规范和格式化，提供更好的代码质量保障，代码的可读性增强")])]),l("li",null,[l("p",null,"代码提交：husky、commitlint、lint-staged")]),l("li",null,[l("p",null,"规范代码的提交规范，并在暂存区中根据不同的文件进行不同校验并修改")]),l("li",null,[l("p",null,"组件模板：plop.js")]),l("li",null,[l("p",null,"为组件文件创建一个固定的目录，使得项目目录的一致性；在模板文件中可添加固定代码，减少重复作业，增加效率")]),l("li",null,[l("p",null,"依赖管理：lint-deps")])])])]),l("h3",{id:"_3-2-架构设计",tabindex:"-1"},[n("3.2 架构设计 "),l("a",{class:"header-anchor",href:"#_3-2-架构设计","aria-hidden":"true"},"#")]),l("ul",null,[l("li",null,"企业或者个人设计项目产品，为快速便捷实现UI界面，通过使用组件库，可以快速构建出符合需求的UI界面，并且可以在不影响代码质量和稳定性的情况下选择符合自己UI界面的组件可自己定制样式和功能，从而提高开发效率和代码可维护性。"),l("li",null,"第一步，在组件库中找到目标组件，如Divider、Tabs和Avatar组件等，以便快速搭建所需的UI界面。"),l("li",null,"第二步，使用组件库提供的UI组件来构建页面，如使Tab构建界面的tabbar，使用Avatar组件显示图片样式，使用progress组件显示进度等"),l("li",null,"在需要定制样式时，可以使用组件库提供的可定制化属性或CSS类名，或者覆盖组件库的默认样式来实现样式定制。")]),l("h3",{id:"_3-3-项目代码介绍",tabindex:"-1"},[n("3.3 项目代码介绍 "),l("a",{class:"header-anchor",href:"#_3-3-项目代码介绍","aria-hidden":"true"},"#")]),l("p",null,"RomanticUI"),l("p",null,[n("├── commitlint.config.js "),l("strong",null,"– 代码提交规范")]),l("p",null,"├── docs"),l("p",null,[n("│ └── index.md "),l("strong",null,"– 项目文档网站首页")]),l("p",null,[n("├── flower.png "),l("strong",null,"– 项目文档logo")]),l("p",null,[n("├── generators "),l("strong",null,"– 模板生成文件")]),l("p",null,[n("│ ├── component "),l("strong",null,"– 组件生成文件")]),l("p",null,"│ │ ├── component.hbs"),l("p",null,"│ │ ├── component.less.hbs"),l("p",null,"│ │ ├── component.md.hbs"),l("p",null,"│ │ ├── component.test.hbs"),l("p",null,"│ │ └── index.js"),l("p",null,"│ ├── index.js"),l("p",null,"│ └── utils"),l("p",null,"├── package-lock.json"),l("p",null,"├── package.json"),l("p",null,[n("├── plopfile.js "),l("strong",null,"– 模板生成入口")]),l("p",null,"├── README.md"),l("p",null,"├── src"),l("p",null,"│ ├── Avatar"),l("p",null,[n("│ │ ├── index.md "),l("strong",null,"– 组件文档")]),l("p",null,[n("│ │ ├── index.tsx "),l("strong",null,"– 组件入口文件")]),l("p",null,"│ │ ├── style"),l("p",null,[n("│ │ │ └── index.less "),l("strong",null,"– 样式文件")]),l("p",null,[n("│ │ └── "),l("strong",null,"test")]),l("p",null,"│ │ └── index.test.ts – 测试文件"),l("p",null,[n("│ ├── config-provider "),l("strong",null,"– 全局context对象")]),l("p",null,"│ │ ├── index.ts"),l("p",null,[n("│ │ └── SizeContext.tsx "),l("strong",null,"– 尺寸Context")]),l("p",null,"│ ├── Divider"),l("p",null,"│ │ ├── index.md"),l("p",null,"│ │ ├── index.tsx"),l("p",null,"│ │ ├── style"),l("p",null,"│ │ │ └── index.less"),l("p",null,[n("│ │ └── "),l("strong",null,"test")]),l("p",null,"│ │ └── index.test.js"),l("p",null,"│ ├── index.ts"),l("p",null,"│ ├── Menu"),l("p",null,[n("│ │ ├── index.md "),l("strong",null,"– 组件文档")]),l("p",null,[n("│ │ ├── index.tsx "),l("strong",null,"– 组件入口文件")]),l("p",null,"│ │ ├── style"),l("p",null,[n("│ │ │ └── index.less "),l("strong",null,"– 样式文件")]),l("p",null,[n("│ │ └── "),l("strong",null,"test")]),l("p",null,[n("│ │ └── index.test.ts "),l("strong",null,"– 测试文件")]),l("p",null,"…"),l("p",null,"│ ├── Tabs"),l("p",null,"│ │ ├── index.md"),l("p",null,"│ │ ├── index.tsx"),l("p",null,"│ │ ├── style"),l("p",null,"│ │ │ ├── card.less"),l("p",null,"│ │ │ ├── content.less"),l("p",null,"│ │ │ ├── index.less"),l("p",null,"│ │ │ ├── label.less"),l("p",null,"│ │ │ ├── position.less"),l("p",null,"│ │ │ └── size.less"),l("p",null,"│ │ ├── TabItem.tsx"),l("p",null,[n("│ │ └── "),l("strong",null,"test")]),l("p",null,"│ │ ├── index.test.ts"),l("p",null,[n("│ └── utils "),l("strong",null,"– 常用工具类")]),l("p",null,"│ └── index.ts"),l("p",null,[n("├── tsconfig.json "),l("strong",null,"– ts配置")]),l("p",null,"├── typings.d.ts"),l("p",null,"└── yarn.lock"),l("p",null,[n("└── .eslintrc.json "),l("strong",null,"– eslint校验配置")]),l("p",null,[n("└── .stylelintrc.json "),l("strong",null,"– 样式校验配置")]),l("p",null,[n("└── .prettierrc.js "),l("strong",null,"– 代码美化配置")]),l("h1",{id:"三、测试结果",tabindex:"-1"},[n("三、测试结果 "),l("a",{class:"header-anchor",href:"#三、测试结果","aria-hidden":"true"},"#")]),l("blockquote",null,[l("p",null,"建议从功能测试和性能测试两部分分析，其中功能测试补充测试用例，性能测试补充性能分析报告、可优化点等内容。")]),l("p",null,"在开发过程中，可以使用组件库提供的测试工具来进行单元测试、集成测试和端到端测试，以保证组件库的质量和稳定性"),l("p",null,[l("img",{src:"https://cexxo0dfwx.feishu.cn/space/api/box/stream/download/asynccode/?code=NDU2YWVhZWFlYWQ5YzNiN2FiMzY0MTU3YTQwOTI2MjJfVks3eWcyM0lGOFFaTVZaaTdGSVZldDdRZmZ5Z1JlaHhfVG9rZW46Ym94Y245eFpNb2diQ2NRQkRFWWJTUUt2ZGNjXzE2Nzg3ODI5NjU6MTY3ODc4NjU2NV9WNA",alt:"img"})]),l("h3",{id:"_4-1-功能性测试",tabindex:"-1"},[n("4.1 功能性测试 "),l("a",{class:"header-anchor",href:"#_4-1-功能性测试","aria-hidden":"true"},"#")]),l("h4",{id:"_4-1-1-avatar",tabindex:"-1"},[n("4.1.1 Avatar "),l("a",{class:"header-anchor",href:"#_4-1-1-avatar","aria-hidden":"true"},"#")]),l("p",null,"Avatar组件可以实现图片样式更改，可动态设置avatar的图片地址，用户自定义样式，头像的大小，头像的形状，数据类型分别为string、string、number、circle、"),l("p",null,"经测试，Avatar功能较全，暂未发现bug。"),l("h4",{id:"_4-1-2-tabs",tabindex:"-1"},[n("4.1.2 Tabs "),l("a",{class:"header-anchor",href:"#_4-1-2-tabs","aria-hidden":"true"},"#")]),l("p",null,"Tabs实现了基本功能的选中和禁用，Tabs实现了基本功能的选中和禁用，tabs居中，拓展功能的滑动可设置上下/左右滑动，附加内容传值，定义tabs的位置和大小等，提供了activeKey、centered、defaultActiveKey、items、size、tabBarExtraContent等14种API，尽大可能的为用户提供组件的多用性，提高组件的复用性。"),l("p",null,"经测试，Tabs功能完善，暂未发现bug。"),l("h4",{id:"_4-1-3-divider",tabindex:"-1"},[n("4.1.3 Divider "),l("a",{class:"header-anchor",href:"#_4-1-3-divider","aria-hidden":"true"},"#")]),l("p",null,"Divider 组件实现分割线，可实现虚线、实线、插入文字等功能，提供了dashed、content，传值类型分别为boolean，string型。"),l("p",null,"经测试，Divider功能较完善，暂未发现bug。"),l("h4",{id:"_4-1-4-progressbar",tabindex:"-1"},[n("4.1.4 ProgressBar "),l("a",{class:"header-anchor",href:"#_4-1-4-progressbar","aria-hidden":"true"},"#")]),l("p",null,"ProgressBar 组件实现了进度条的大小、颜色、文字展示、圆形进度条和动态改变进度条。提供了percent、showinfo、color、isSmall、is Circle等五种API。"),l("p",null,"经测试，ProgressBar功能较全，暂未发现bug。"),l("h4",{id:"_4-1-5-spin",tabindex:"-1"},[n("4.1.5 Spin "),l("a",{class:"header-anchor",href:"#_4-1-5-spin","aria-hidden":"true"},"#")]),l("p",null,"Spin 组件实现了不同类型的加载组件，用户可自定义更改组件显示类型和style，提供了className五种loading样式、style、ref等API。"),l("p",null,"经测试，Spin功能较全，暂未发现bug。"),l("h4",{id:"_4-1-6-menu",tabindex:"-1"},[n("4.1.6 Menu "),l("a",{class:"header-anchor",href:"#_4-1-6-menu","aria-hidden":"true"},"#")]),l("p",null,"Menu 组件可根据用户的传入的内容接收后展示为菜单栏，可通过children参数传入多层嵌套对象。提供设置主题、禁用、导航项类型、菜单模式等API。"),l("p",null,"经测试，Menu组件暂未发现Bug。"),l("h1",{id:"四、demo-演示视频",tabindex:"-1"},[n("四、Demo 演示视频 "),l("a",{class:"header-anchor",href:"#四、demo-演示视频","aria-hidden":"true"},"#")]),l("blockquote",null,[l("p",null,[n("视频演示 地址："),l("a",{href:"https://www.bilibili.com/video/BV11s4y1G7jE/?pop_share=1&vd_source=838e1af33bcd36eddf8795a8c7ad8b5a",target:"_blank",rel:"noopener"},"https://www.bilibili.com/video/BV11s4y1G7jE/?pop_share=1&vd_source=838e1af33bcd36eddf8795a8c7ad8b5a")])]),l("iframe",{src:"//player.bilibili.com/player.html?aid=950947961&bvid=BV11s4y1G7jE&cid=1052768329&page=1",width:"500px",height:"400px",scrolling:"no",border:"0",frameborder:"no",framespacing:"0",allowfullscreen:"true"}," "),l("h1",{id:"五、项目总结与反思",tabindex:"-1"},[n("五、项目总结与反思 "),l("a",{class:"header-anchor",href:"#五、项目总结与反思","aria-hidden":"true"},"#")]),l("blockquote",null,[l("ol",null,[l("li",null,[l("h3",{id:"目前仍存在的问题",tabindex:"-1"},[n("目前仍存在的问题 "),l("a",{class:"header-anchor",href:"#目前仍存在的问题","aria-hidden":"true"},"#")])])]),l("ul",null,[l("li",null,"组件数量偏少，无法满足企业大量需求"),l("li",null,"在组件功能上，在个别组件上，功能不够全面。")]),l("ol",null,[l("li",null,[l("h3",{id:"已识别出的优化项",tabindex:"-1"},[n("已识别出的优化项 "),l("a",{class:"header-anchor",href:"#已识别出的优化项","aria-hidden":"true"},"#")])])]),l("ul",null,[l("li",null,"增加组件数量，以满足更多需求"),l("li",null,"完善组件功能，提高组件复用率")]),l("ol",null,[l("li",null,[l("h3",{id:"架构演进的可能性",tabindex:"-1"},[n("架构演进的可能性 "),l("a",{class:"header-anchor",href:"#架构演进的可能性","aria-hidden":"true"},"#")])])]),l("ul",null,[l("li",null,"Web Components是一种新的Web技术，开发者通过自定义的 HTML 标签和 CSS 元素，来还原 UI 设计，并完善相关功能使组件能够在多个地方进行复用，组件库架构向这个方向演进以支持更广泛的Web开发需求。"),l("li",null,"需求组件增多，跨端语言也实现了移动端和WEB端的多端运行，组件库架构会向适配多端运行的方向演进，支持多端匹配。")]),l("ol",null,[l("li",null,[l("h3",{id:"项目过程中的反思与总结",tabindex:"-1"},[n("项目过程中的反思与总结 "),l("a",{class:"header-anchor",href:"#项目过程中的反思与总结","aria-hidden":"true"},"#")])])]),l("ul",null,[l("li",null,"项目总结: 完成了6个组件但功能不够完备，组件数量少。"),l("li",null,"能兼容Edge、Chrome等主流浏览器。"),l("li",null,"开发过程中不仅会遇到开发技术难度的挑战，时间也非常紧迫，还有队友之间的团队协作比较弱。")])])],-1),g="RomanticUI项目总结",f="RomanticUI",x="2023-03-11T08:00:00.000Z",_="zh",I="jottings",U="15min",y=[{property:"og:title",content:"RomanticUI项目总结"},{property:"og:description",content:"RomanticUI"},{name:"description",content:"RomanticUI"}],v={__name:"romanticui",setup(p,{expose:t}){const e={title:"RomanticUI项目总结",description:"RomanticUI",date:"2023-03-11T08:00:00.000Z",lang:"zh",type:"jottings",duration:"15min",meta:[{property:"og:title",content:"RomanticUI项目总结"},{property:"og:description",content:"RomanticUI"},{name:"description",content:"RomanticUI"}]};return t({frontmatter:e}),i({title:"RomanticUI项目总结",meta:[{property:"og:title",content:"RomanticUI项目总结"},{property:"og:description",content:"RomanticUI"},{name:"description",content:"RomanticUI"}]}),(h,m)=>{const a=s;return o(),u(a,{frontmatter:e},{default:r(()=>[d]),_:1})}}};export{x as date,v as default,f as description,U as duration,_ as lang,y as meta,g as title,I as type};
